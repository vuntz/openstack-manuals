<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="basic-install_network-services">
    <title>OpenStack Networking (Network Controller)</title>
    <section xml:id="network-ovs">
    <title>Open vSwitch</title>
    <para>
        <orderedlist>
            <listitem>
                <para>Install the packages:
                    <screen os="ubuntu"><prompt>#</prompt> <userinput>apt-get install quantum-plugin-openvswitch-agent \
quantum-dhcp-agent quantum-l3-agent</userinput></screen>
                    <screen os="centos;rhel;fedora"><prompt>#</prompt> <userinput>yum install openstack-quantum openstack-quantum-openvswitch\
openvswitch-switch</userinput></screen>
                    <screen os="opensuse"><prompt>#</prompt> <userinput>zypper install openstack-quantum openstack-quantum-openvswitch\
openvswitch-switch</userinput></screen>
		</para>
                <para os="centos;rhel;fedora">The Open vSwitch kernel module in Fedora
                        has been compiled without tunnel support. If
                        gre tunnels and network namespaces are
                        desired, then this package must be recompiled
                        from source. Directions can be found on the
                        Open vSwitch site. If the kernel module is
                        recompiled then the existing one must be
                        removed and deleted.</para>
            </listitem>
            <listitem>
                <para>Start Open vSwitch:
                    <screen os="centos;rhel;fedora"><prompt>#</prompt> <userinput>service openvswitch-switch start</userinput>
<prompt>#</prompt> <userinput>chkconfig openvswitch-switch on</userinput></screen>
                    <screen os="ubuntu"><prompt>#</prompt> <userinput>service openvswitch-switch start</userinput></screen>
                    <screen os="opensuse"><prompt>#</prompt> <userinput>systemctl start openvswitch-switch</userinput>
<prompt>#</prompt> <userinput>systemctl enable openvswitch-switch</userinput></screen>
                </para>
            </listitem>
            <listitem>
                <para>Create an internal and external network bridge. The purposes of these bridges are described in the Introduction of this guide.                     
                    <screen><prompt>#</prompt> <userinput>ovs-vsctl add-br br-ex</userinput>
<prompt>#</prompt> <userinput>ovs-vsctl add-port br-ex eth1</userinput>
<prompt>#</prompt> <userinput>ovs-vsctl add-br br-int</userinput>
</screen></para>
            </listitem>
            <listitem>
                <para>Configure the bridges:
                    <itemizedlist>
                        <listitem os="ubuntu">
                            <para>Change the <literal>eth1</literal> entry in <emphasis role="bold"
                                        >/etc/network/interfaces</emphasis> to look like:
                                    <programlisting>auto eth1
iface eth1 inet manual              
    up ip address add 0/0 dev $IFACE
    up ip link set $IFACE up        
    down ip link set $IFACE down</programlisting>
                                </para>
                        </listitem>
                        <listitem os="ubuntu">
                            <para>Add <literal>br-ex</literal> to <emphasis role="bold">/etc/network/interfaces</emphasis>:
                                <programlisting>auto br-ex
iface br-ex inet static
    address 10.0.0.9
    netmask 255.255.255.0
    gateway 10.0.0.1
</programlisting></para>
                        </listitem>
                        <listitem os="centos;rhel;fedora">
                            <para>Edit <emphasis role="bold">/etc/sysconf/network-scripts/ifcfg-eth1</emphasis>:
                                <programlisting># External
DEVICE=eth1
TYPE=Ethernet
BOOTPROTO=none
NM_CONTROLLED=no
BRIDGE=br-ex
ONBOOT=yes
</programlisting>
                            </para>
                        </listitem>
                        <listitem os="centos;rhel;fedora">
                            <para>Edit <emphasis role="bold">/etc/sysconf/network-scripts/ifcfg-br-ex</emphasis> file:
                                <programlisting>#Public Bridge
DEVICE=br-ex
TYPE=Bridge
BOOTPROTO=static
IPADDR=10.10.10.9
NETMASK=255.255.255.0
NM_CONTROLLED=no
ONBOOT=yes
</programlisting>
			    </para>
			</listitem>
                        <listitem os="opensuse">
                            <para>
                                TBD
                            </para>
			</listitem>
                        <listitem>
                            <para>Remove the IP address from <literal>eth1</literal> add it to
                                        <literal>br-ex</literal>:
                                    <screen><prompt>#</prompt> <userinput>ip addr del 10.0.0.9/24 dev eth1</userinput>
<prompt>#</prompt> <userinput>ip addr add 10.0.0.9/24 dev br-ex</userinput></screen>
                                </para>
                        </listitem>
                        <listitem os="ubuntu">
                            <para>Restart networking:
                                <screen><prompt>#</prompt> <userinput>service networking restart</userinput></screen>
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
            </listitem>
            <listitem>
                            <para>Finally, enable a simple NAT service so that the Compute Node(s)
                        can access the Internet through the Cloud Controller:
                        <screen><userinput>echo 1 > /proc/sys/net/ipv4/conf/all/forwarding
iptables -A FORWARD -i eth0 -o br-ex -s 10.10.10.0/24 -m conntrack --ctstate NEW -j ACCEPT
iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A POSTROUTING -s 10.10.10.0/24 -t nat -j MASQUERADE</userinput></screen></para>
            </listitem>
        </orderedlist>
    </para>
    </section>
    <section xml:id="network-quantum">
        <title>Quantum</title>
            <para>Configure the Quantum services:</para>
            <itemizedlist>
                <listitem>
                    <para>Edit <emphasis role="bold">/etc/quantum/quantum.conf</emphasis>:
                        <programlisting os="ubuntu">[DEFAULT]
verbose = True
rabbit_password = password
rabbit_host = 10.10.10.10
[keystone_authtoken]
auth_host = 10.10.10.10
admin_tenant_name = service
admin_user = quantum 
admin_password = password</programlisting>
                        <programlisting os="centos;rhel;fedora">[DEFAULT]
verbose = True
rpc_backend = cinder.openstack.common.rpc.impl_qpid
sql_connection = mysql://cinder:password@localhost/cinder
qpid_user = guest
qpid_password = quest
[keystone_authtoken]
auth_host = 10.10.10.10
admin_tenant_name = service
admin_user = quantum 
admin_password = password</programlisting>
                        <programlisting os="opensuse">[DEFAULT]
verbose = True
rabbit_password = password
rabbit_host = 10.10.10.10
[keystone_authtoken]
auth_host = 10.10.10.10
admin_tenant_name = service
admin_user = quantum 
admin_password = password</programlisting>

		    </para>
                </listitem>
                <listitem>
                    <para>Edit <emphasis role="bold">/etc/quantum/plugins/openvswitch/ovs_quantum_plugin.ini</emphasis>:
                        <programlisting>[DATABASE]
sql_connection = mysql://quantum:password@10.10.10.10/quantum
[OVS]
tenant_network_type = gre 
tunnel_id_ranges = 1:1000
enable_tunneling = True
local_ip = 10.10.10.9
[SECURITYGROUP]                                                                        
firewall_driver = quantum.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver</programlisting>
                    <note xmlns:db="http://docbook.org/ns/docbook">
                        <para>It's more handy to choose <emphasis role="bold">tunnel mode</emphasis>
                            since you don't have to configure your
                            physical switches for VLANs.</para>
                    </note></para>
                </listitem>
                <listitem>
                    <para>Edit <emphasis role="bold">/etc/quantum/dhcp_agent.ini</emphasis>:
                        <programlisting>[DEFAULT]
enable_isolated_metadata = True
enable_metadata_network = True</programlisting></para>
                </listitem>
                <listitem>
                    <para>Edit <emphasis role="bold">/etc/quantum/metadata_agent.ini</emphasis>:
                    <programlisting>[DEFAULT]
auth_url = http://10.10.10.10:35357/v2.0
auth_region = RegionOne               
admin_tenant_name = service           
admin_user = quantum                  
admin_password = password
nova_metadata_ip = 10.10.10.10
metadata_proxy_shared_secret = password
                    </programlisting></para>
                </listitem>
            </itemizedlist>

            <para>Start the services:
                <screen os="ubuntu"><prompt>#</prompt> <userinput>service quantum-plugin-openvswitch-agent start</userinput>
<prompt>#</prompt> <userinput>service quantum-dhcp-agent restart</userinput>
<prompt>#</prompt> <userinput>service quantum-metadata-agent restart</userinput>
<prompt>#</prompt> <userinput>service quantum-l3-agent restart</userinput></screen>
                <screen os="centos;rhel;fedora"><prompt>#</prompt> <userinput>service quantum-server restart</userinput>
<prompt>#</prompt> <userinput>service quantum-openvswitch-agent restart</userinput>
<prompt>#</prompt> <userinput>service quantum-dhcp-agent restart</userinput>
<prompt>#</prompt> <userinput>service quantum-l3-agent restart</userinput>
<prompt>#</prompt> <userinput>chkconfig quantum-server on</userinput>
<prompt>#</prompt> <userinput>chkconfig quantum-openvswitch-agent on</userinput>
<prompt>#</prompt> <userinput>chkconfig quantum-dhcp-agent on</userinput>
<prompt>#</prompt> <userinput>chkconfig quantum-l3-agent on</userinput></screen>
                <screen os="opensuse"><prompt>#</prompt> <userinput>systemctl restart quantum-server</userinput>
<prompt>#</prompt> <userinput>systemctl restart quantum-openvswitch-agent</userinput>
<prompt>#</prompt> <userinput>systemctl restart quantum-dhcp-agent</userinput>
<prompt>#</prompt> <userinput>systemctl restart quantum-l3-agent</userinput>
<prompt>#</prompt> <userinput>systemctl enable quantum-server</userinput>
<prompt>#</prompt> <userinput>systemctl enable quantum-openvswitch-agent</userinput>
<prompt>#</prompt> <userinput>systemctl enable quantum-dhcp-agent</userinput>
<prompt>#</prompt> <userinput>systemctl enable quantum-l3-agent</userinput></screen>
            
            </para>
    <note>
        <para>
            Check the <literal>/var/log/quantum/*.log</literal> files for errors that would prevent
            the Networking Service from successfully starting.
        </para>
    </note>    
       
    </section>
</section>
